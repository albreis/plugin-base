{"version":3,"sources":["PluginBase.js","main.gulp.js"],"names":["window","PluginBase","plugin","_typeof","settings","target","items","Promise","resolve","reject","keys","Object","key","counter","then","plugin_base"],"mappings":"8PAAAA,OAAOC,WAAa,SAACC,GAEC,UAAjBC,QAAOD,KACRA,EAAS,IAMX,IAAIE,EAAW,CACbC,OAAQH,EAAOG,OACfC,MAAO,GADPD,EAAQH,OAAOG,KADFH,EAAAE,UAAA,IAAfG,QAAA,SAAAC,EAAAC,GAKA,IAAIC,EAAOC,EAEXD,EAAIH,QAAQ,SAAAK,GACV,IAAIC,EAAOT,SAAXQ,KACIR,EAASQ,GAAAV,EAAGE,SAAIQ,IAEhBR,GAAQM,EAAQR,QACjBM,EAAAJ,GACDS,QAECC,KAAA,SAAAV;aCxBPJ,OAAOe,YAAc,SAAAb,GAAM,OAAI,IAAID,WAAWC","file":"main.min.js","sourcesContent":["window.PluginBase = (plugin) => {\r\n\r\n  if(typeof plugin != 'object') {\r\n    plugin = {}\r\n  }\r\n\r\n  /**\r\n   * Default settings\r\n   */\r\n  let settings = {\r\n    target: plugin.target,\r\n    items: 1\r\n  }\r\n\r\n  let keys = Object.keys(plugin.settings);\r\n\r\n  new Promise((resolve, reject) => {\r\n    let counter = 1\r\n    keys.forEach(key => {\r\n      if(plugin.settings[key] != ''){\r\n        settings[key] = plugin.settings[key]\r\n      }\r\n      if(counter >= keys.length) {\r\n        resolve(settings)\r\n      }\r\n      counter++\r\n    })\r\n  }).then(settings => {\r\n    /**\r\n     * Settings.target é o ID do container onde o plugin é encapsulado\r\n     */\r\n  })  \r\n}","window.plugin_base = plugin => new PluginBase(plugin);"]}